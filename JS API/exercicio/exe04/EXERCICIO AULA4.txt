Desafio 1: refatorando a barra de pesquisa
PRÓXIMA ATIVIDADE

Neste desafio, você terá a oportunidade de praticar os seus conhecimentos sobre refatoração de código para melhorar a funcionalidade da barra de pesquisa do VidFlow. O código atual funciona, mas pode ser aprimorado para maior clareza e eficiência.

Abaixo, temos alguns passos que podem te auxiliar nesse processo:

Analise o código atual e compreenda como a barra de pesquisa filtra os vídeos com base no título;
Pense em outras possíveis estruturas de loop para percorrer os elementos videos;
Observe se há uso de variáveis desnecessárias;
Pense em maneiras de deixar a estrutura condicional mais concisa;
Garanta que a funcionalidade de exibir/ocultar vídeos seja mantida.
Caso sinta alguma dificuldade, observe o gabarito com o código refatorado como referência para a melhoria do código. Certifique-se de que seu código final funcione da mesma forma, mas com melhor legibilidade e eficiência.

Boa sorte na refatoração!


Resposta: Olhar o código da atividade na pasta rodar e ver no navegador!

Resposta escrita:

function filtrarPesquisa() {
  const videos = document.querySelectorAll('.videos__item');
  const valorFiltro = barraDePesquisa.value.toLowerCase();

  videos.forEach((video) => {
    const titulo = video.querySelector('.titulo-video').textContent.toLowerCase();

    video.style.display = valorFiltro ? titulo.includes(valorFiltro) ? 'block' : 'none' : 'block';
  });
}

---------------------------------------------------------------------------------------------------------------------------
Desafio 2

Lista de exercícios
PRÓXIMA ATIVIDADE

Vamos praticar o que aprendemos até aqui?

1) Implementando uma barra de pesquisa com JavaScript
A próxima tarefa será a implementação de uma funcionalidade de pesquisa que permita aos usuários filtrar os vídeos disponíveis por título. Utilize JavaScript para criar uma barra de pesquisa funcional que atenda a essa necessidade. Siga as orientações abaixo:

No arquivo index.html, certifique-se de que cada vídeo esteja dentro de um elemento com a classe .videos__item e que cada um tenha um atributo data-title contendo o título do vídeo;
No arquivo script.js, utilize o código fornecido para iniciar a implementação da barra de pesquisa;
Modifique a função filtrarPesquisa para que ela compare o valor inserido na barra de pesquisa com o atributo data-title de cada vídeo, tornando visíveis apenas os vídeos cujos títulos correspondam ao texto pesquisado.
2) Filtrando conteúdo dinamicamente
Imagine que você está desenvolvendo um site de reviews de filmes. Sua liderança solicitou que, para melhorar a experiência do usuário, você implemente uma barra de pesquisa que permita aos usuários filtrar os filmes por título. Os filmes estão listados em cards na página, cada um com uma classe .filme-card e o título está dentro de um elemento com a classe .titulo-filme. Crie a lógica JavaScript para essa barra de pesquisa funcionar, de forma que, ao digitar no campo de pesquisa, apenas os filmes cujos títulos correspondam ao texto inserido sejam exibidos.

3) Criando um filtro de categorias dinâmico para seu site
Você já possui a estrutura básica do site e agora precisa adicionar a funcionalidade de filtragem de categorias, utilizando JavaScript para manipular os elementos da página com base na categoria selecionada pelo usuário.

O site já está recebendo as categorias dos vídeos por meio de uma API e armazenando essas informações de forma oculta na página, dentro de elementos <p> com a classe .categoria. Seu objetivo é criar uma função, podendo se chamar por exemplo, filtrarPorCategoria que receba um argumento filtro, correspondendo à categoria que o usuário deseja visualizar.

A função deve iterar sobre todos os vídeos disponíveis na página, comparar a categoria de cada vídeo com o filtro selecionado e, com base nisso, decidir se o vídeo deve ser exibido ou escondido.

Você pode seguir essas dicas para realizar o exercício:

Capture todos os elementos de vídeo na página.
Para cada vídeo, obtenha a categoria a partir do elemento oculto.
Compare a categoria do vídeo com o filtro selecionado pelo usuário.
Se a categoria não corresponder ao filtro e o filtro for diferente de "tudo", esconda o vídeo. Caso contrário, mostre o vídeo.
Lembre-se de que o filtro "Tudo" deve exibir todos os vídeos, independentemente de suas categorias.
