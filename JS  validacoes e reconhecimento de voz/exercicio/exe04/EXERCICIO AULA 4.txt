Lista de exercícios
PRÓXIMA ATIVIDADE

Vamos praticar o que aprendemos até aqui?

1) Validando o chute no jogo de adivinhação
Desenvolva uma funcionalidade que valide o chute dado pelo jogador em um jogo de adivinhação. O chute deve ser um número inteiro dentro de um intervalo especificado, por exemplo, entre 1 e 1000. Crie um arquivo chamado validacao.js e implemente a função verificaSeOChutePossuiUmValorValido(chute). Essa função deve verificar se o chute é um número válido e, se não for, exibir uma mensagem de erro no console do navegador, indicando que o valor é inválido.

2) Exibindo feedback do chute diretamente na tela
Aprimore a interação do seu jogo de adivinhação, permitindo que, após um chute ser feito utilizando o reconhecimento de voz, além de exibir o número dito, uma mensagem de feedback seja mostrada diretamente na interface do usuário. Essa mensagem deve indicar se o valor falado é válido ou não. Se o valor não for um número ou estiver fora do intervalo aceitável (por exemplo, 1 a 1000), mostre uma mensagem de erro como "Valor inválido: Fale um número entre 1 e 1000". Implemente essa funcionalidade modificando o arquivo reconhecimentoDeVoz.js para adicionar a mensagem de erro diretamente no HTML, abaixo do número falado.

3) Descobrindo o número secreto
Para tornar o jogo de adivinhação mais envolvente, você decide implementar feedbacks visuais com base no palpite do usuário: se o palpite for muito alto ou muito baixo em relação ao número secreto, o jogo deve indicar isso visualmente. Além disso, se o palpite for inválido (por exemplo, uma palavra ou um número fora do intervalo permitido), o jogo deve mostrar uma mensagem de "Valor inválido". Sua tarefa é criar uma função em JavaScript que realize essas verificações e atualize a interface do usuário (UI) de acordo com o palpite dado.

Bom trabalho!